{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/auth.roles.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/instrucoes/instrucoes.component.ts","webpack:///src/app/instrucoes/instrucoes.component.html","webpack:///src/app/instrucoes/parte1/parte1.component.ts","webpack:///src/app/instrucoes/parte1/parte1.component.html","webpack:///src/app/instrucoes/parte2/parte2.component.ts","webpack:///src/app/instrucoes/parte2/parte2.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/resultado/resultado-chart/resultado-chart.component.ts","webpack:///src/app/resultado/resultado-chart/resultado-chart.component.html","webpack:///src/app/resultado/resultado.component.ts","webpack:///src/app/resultado/resultado.component.html","webpack:///src/app/selecao/selecao.component.ts","webpack:///src/app/selecao/selecao.component.html","webpack:///src/app/simulador/etapa1/etapa1.component.ts","webpack:///src/app/simulador/etapa1/etapa1.component.html","webpack:///src/app/simulador/etapa1/pergunta/campo-combobox/campo-combobox.component.ts","webpack:///src/app/simulador/etapa1/pergunta/campo-combobox/campo-combobox.component.html","webpack:///src/app/simulador/etapa1/pergunta/campo-combobox/campo/campo.component.ts","webpack:///src/app/simulador/etapa1/pergunta/campo-combobox/campo/campo.component.html","webpack:///src/app/simulador/etapa1/pergunta/pergunta.component.ts","webpack:///src/app/simulador/etapa1/pergunta/pergunta.component.html","webpack:///src/app/simulador/etapa2/etapa2.component.ts","webpack:///src/app/simulador/etapa2/etapa2.component.html","webpack:///src/app/simulador/simulador.component.ts","webpack:///src/app/simulador/simulador.component.html","webpack:///src/directives/cnpj.directive.ts","webpack:///src/directives/cpf.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/services/appsettings.ts","webpack:///src/services/simulador.service.ts","webpack:///src/services/usuario.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","canActivate","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","progressBar","declarations","providers","bootstrap","AuthGuard","router","next","state","localStorage","getItem","navigate","providedIn","AuthInterceptor","clonedReq","clone","headers","set","handle","pipe","succ","err","status","removeItem","navigateByUrl","AuthRole","AuthService","token","jwt","ParseJwt","accessControl","Admin","setItem","Usuario","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","FooterComponent","nextRouter","console","log","onNext","HomeComponent","InstrucoesComponent","Parte1Component","Parte2Component","LoginComponent","_service","authService","toastr","formModel","Cnpj","Senha","value","cnpj","form","Login","subscribe","res","CheckAuthorization","error","message","onSubmit","FilterCnpj","MenuComponent","home","onLogout","RegistrationComponent","service","CadastrarUsuario","reset","success","forEach","element","ResultadoChartComponent","sService","chart","type","roles","role","index","data","columnNames","options","colors","bar","groupWidth","animation","duration","easing","annotations","alwaysOutside","hAxis","format","minValue","maxValue","formatter","GetResultadoEtapa1","maturidade","satisfacao","valor","v","f","svgString","XMLSerializer","serializeToString","document","querySelector","ConvertToDataURLviaCanvas","x","SendEmail","toPromise","reject","img","Image","canvas","createElement","ctx","getContext","svg","Blob","url","window","URL","createObjectURL","crossOrigin","onload","dataURL","height","width","drawImage","toDataURL","src","Base64toBlob","dataURI","name","outputFormat","byteString","ab","ArrayBuffer","length","ia","Uint8Array","i","BlobToFile","blob","fileName","b","lastModifiedDate","Date","EnviarEmail","ResultadoComponent","SelecaoComponent","Etapa1Component","route","tabelaActive","pergunta","paramMap","params","get","GetTabela","tabela","campos","parseInt","CampoComboboxComponent","library","usuario","resposta","addIconPacks","respostas","subCampos","GetCampoUsuario","idx","Math","round","active","SetCampoUsuario","CampoComponent","respostaEmitter","emit","campo","onChange","PerguntaComponent","perguntaIndex","$","tooltip","animated","trigger","Etapa2Component","SimuladorComponent","CnpjDirective","el","decimals","specialKeys","String","match","RegExp","regExpString","event","indexOf","key","current","nativeElement","concat","check","preventDefault","CpfDirective","environment","production","bootstrapModule","catch","AppSettings","defaultUrl","SimuladorService","http","appsettings","simulador","campoUsuario","post","formData","FormData","append","UsuarioService","fb","group","FullName","required","Email","email","Telefone","TipoTelefone","RazaoSocial","TipoEmpresa","Produto","Faturamento","Passwords","minLength","ConfirmSenha","validator","comparePasswords","confirmPaswrdCtrl","errors","setErrors","body","response","Password","Token","throw"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ResultadoComponent } from './resultado/resultado.component';\nimport { ResultadoChartComponent } from './resultado/resultado-chart/resultado-chart.component';\nimport { SimuladorComponent } from './simulador/simulador.component';\nimport { Etapa1Component } from './simulador/etapa1/etapa1.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { InstrucoesComponent } from './instrucoes/instrucoes.component';\nimport { Parte1Component } from './instrucoes/parte1/parte1.component';\nimport { Parte2Component } from './instrucoes/parte2/parte2.component';\nimport { SelecaoComponent } from './selecao/selecao.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegistrationComponent },\n  {\n    path: \"simulador\", component: SimuladorComponent,\n    children: [\n      { path: \"home\", component: HomeComponent, canActivate: [AuthGuard] },\n      {\n        path: \"instrucoes\", component: InstrucoesComponent,\n        children: [\n          { path: \"parte1\", component: Parte1Component, canActivate: [AuthGuard] },\n          { path: \"parte2\", component: Parte2Component, canActivate: [AuthGuard] }\n        ],\n        canActivate: [AuthGuard]\n      },\n      { path: \"selecao\", component: SelecaoComponent, canActivate: [AuthGuard] },\n      { path: \"etapa1/resultado\", component: ResultadoChartComponent, canActivate: [AuthGuard] },\n      { path: \"etapa1/:pergunta\", component: Etapa1Component, canActivate: [AuthGuard] }\n    ]\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [\n  HomeComponent,\n  SimuladorComponent,\n  Etapa1Component,\n  ResultadoComponent,\n  ResultadoChartComponent,\n  LoginComponent,\n  RegistrationComponent,\n  InstrucoesComponent,\n  SelecaoComponent,\n  Parte1Component,\n  Parte2Component\n]\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Simulador-Web';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { PerguntaComponent } from './simulador/etapa1/pergunta/pergunta.component';\nimport { CampoComponent } from './simulador/etapa1/pergunta/campo-combobox/campo/campo.component';\nimport { CampoComboboxComponent } from './simulador/etapa1/pergunta/campo-combobox/campo-combobox.component';\nimport { Etapa2Component } from './simulador/etapa2/etapa2.component';\nimport { UsuarioService } from 'src/services/usuario.service';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { AuthService } from './auth/auth.service';\nimport { CpfDirective } from 'src/directives/cpf.directive';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CnpjDirective } from 'src/directives/cnpj.directive';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    CampoComboboxComponent,\n    CampoComponent,\n    PerguntaComponent,\n    Etapa2Component,\n    CpfDirective,\n    CnpjDirective,\n    MenuComponent,\n    FooterComponent,\n    \n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule.forRoot(),\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n    FontAwesomeModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    AuthService,\n    UsuarioService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router:Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean{\r\n      if(localStorage.getItem(\"token\")!=null)\r\n      return true;\r\n      else{\r\n        this.router.navigate([\"login\"]);\r\n        return false;\r\n      }\r\n    }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n    constructor(private router:Router){\r\n\r\n    }\r\n    intercept(req:HttpRequest<any>, next: HttpHandler):Observable<HttpEvent<any>>{\r\n        if(localStorage.getItem(\"token\") != null){\r\n            const clonedReq = req.clone({\r\n                headers : req.headers.set(\"Authorization\",\"Bearer \"+localStorage.getItem(\"token\"))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ=>{},\r\n                    err=>{\r\n                        if(err.status == 401){\r\n                            localStorage.removeItem(\"token\");\r\n                            this.router.navigateByUrl(\"login\");\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        }\r\n        else\r\n        return next.handle(req.clone());\r\n    }\r\n}\r\n","export enum AuthRole {   \r\n    Admin = 'ADMINISTRADOR',\r\n    Usuario = \"USUARIO\"\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthRole } from './auth.roles';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthService{\r\n\r\n    constructor(private router : Router){}\r\n    \r\n    CheckAuthorization(token){\r\n        var jwt  = this.ParseJwt(token);\r\n        if(jwt.accessControl == AuthRole.Admin){\r\n            this.router.navigate([\"simulador/home\"]);\r\n            localStorage.setItem(\"token\", token);\r\n            return true;\r\n        }\r\n        else if(jwt.accessControl == AuthRole.Usuario){\r\n            this.router.navigate([\"simulador/home\"]);\r\n            localStorage.setItem(\"token\", token);\r\n            return true;\r\n        }\r\n        localStorage.removeItem(\"token\");\r\n        this.router.navigate([\"login\"]);\r\n        return false;\r\n    }\r\n\r\n    ParseJwt (token) {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    \r\n        return JSON.parse(jsonPayload);\r\n    };\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n\n  @Input() nextRouter = \"\";\n  constructor(private router : Router) { }\n\n  onNext(){\n    console.log(this.nextRouter)\n    this.router.navigate(['simulador/'+this.nextRouter]);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button class=\"button\" (click)=\"onNext()\">\n    <ng-content></ng-content>\n</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div class=\"painel-wrapper\">\n    <div class=\"painel\">\n        <img src=\"assets/images/logo_diagnostico.png\" alt=\"\" class=\"logo\">\n\n        <div class=\"row\">\n            <div class=\"col\">\n                <img src=\"assets/images/logo.png\" alt=\"\" class=\"logo-sebrae\">\n            </div>\n        </div>\n    </div>\n</div>\n\n<app-footer [nextRouter]=\"'../instrucoes/parte1'\">\n    Iniciar\n</app-footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instrucoes',\n  templateUrl: './instrucoes.component.html',\n  styleUrls: ['./instrucoes.component.css']\n})\nexport class InstrucoesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"conteudo-wrapper\">\n    <div class=\"titulo\">\n        <img src=\"../../assets/images/instrucoes.png\" alt=\"\" class=\"instrucoes\">\n    </div>\n    <div class=\"conteudo\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parte1',\n  templateUrl: './parte1.component.html',\n  styleUrls: ['./parte1.component.css']\n})\nexport class Parte1Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p class=\"instrucao\">Para realizar o diagnóstico financeiro do seu negócio, você\n    poderá passar por três etapas:</p>\n<div class=\"row\">\n    <div class=\"col-lg-3\">\n        <div class=\"painel-instrucao\">\n            <img src=\"assets/images/icone1.png\" alt=\"\" class=\"\">\n            <p>Ao responder um pequeno questionário, você refletirá sobre a atual maturidade financeira\n                do seu negócio, além de medir o seu grau de satisfação.</p>\n        </div>\n    </div>\n    <div class=\"col-lg-6\">\n\n        <img src=\"assets/images/etapas.png\" alt=\"\" class=\"etapas\">\n\n        <div class=\"row justify-content-center\">\n            <div class=\"col-lg-6\">\n                <div class=\"painel-instrucao\">\n                    <img src=\"assets/images/icone2.png\" alt=\"\" class=\"\">\n                    <p>Ao responder um pequeno questionário, você refletirá sobre a atual maturidade financeira\n                        do seu negócio, além de medir o seu grau de satisfação.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3\">\n        <div class=\"painel-instrucao\">\n            <img src=\"assets/images/icone3.png\" alt=\"\" class=\"\">\n            <p>Ao responder um pequeno questionário, você refletirá sobre a atual maturidade financeira\n                do seu negócio, além de medir o seu grau de satisfação.</p>\n        </div>\n    </div>\n</div>\n<app-footer [nextRouter]=\"'instrucoes/parte2'\">\n    Próximo\n</app-footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parte2',\n  templateUrl: './parte2.component.html',\n  styleUrls: ['./parte2.component.css']\n})\nexport class Parte2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"instrucao\">\n    <h1 class=\"titulo\">Animado para começar?</h1>\n\n    <p class=\"text-align-center\">Saiba que esta ferramenta de diagnóstico é autoexplicativa, portanto para facilitar seu\n        entendimento, no decorrer\n        das\n        etapas você poderá consultar a maioria dos termos utilizados aqui, clicando sobre a lâmpada ou lendo o conceito\n        dentro das caixas.</p>\n\n    <p class=\"col\">Veja:</p>\n</div>\n\n<picture>\n    <source media=\"(max-width: 992px)\" srcset=\"assets/images/imagem-instrucao-mobile.png\">\n    <img src=\"assets/images/imagem-instrucao.png\" alt=\"\" class=\"imagem\">\n</picture>\n\n<app-footer [nextRouter]=\"'selecao'\">\n    Próximo\n</app-footer>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioService } from 'src/services/usuario.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  formModel = {\n    Cnpj: '',\n    Senha: ''\n  }\n  constructor(private _service: UsuarioService, private authService: AuthService, private toastr: ToastrService) { }\n\n  ngOnInit() { }\n\n  FilterCnpj(value) {\n    var cnpj = value + '';\n    cnpj = cnpj.replace(/\\D/g, '');\n    cnpj = cnpj.replace(/^(\\d{2})(\\d)/, '$1.$2');\n    cnpj = cnpj.replace(/^(\\d{2})\\.(\\d{3})(\\d)/, '$1.$2.$3');\n    cnpj = cnpj.replace(/\\.(\\d{3})(\\d)/, '.$1/$2');\n    cnpj = cnpj.replace(/(\\d{4})(\\d)/, '$1-$2');\n    this.formModel.Cnpj = cnpj;\n  }\n\n  onSubmit(form: NgForm) {\n    this._service.Login(form.value).subscribe((res: any) => {   \n      console.log(res.token)  \n      this.authService.CheckAuthorization(res.token);\n    }, error => {\n      this.toastr.error(error.error.message, \"Falha ao tentar logar\");\n    })\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"box-login\">\n        <h1>Diagnóstico Gestão Financeira</h1>\n        <label>Digite seus dados para realizar o login</label>\n        <div class=\"row\">\n            <div class=\"col\">\n                <form #form=\"ngForm\" class=\"mb-4\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n                    <div class=\"form-group\">\n                        <label>CNPJ</label>\n                        <input class=\"form-control\" #Cnpj=\"ngModel\" name=\"Cnpj\" CnpjFilter [(ngModel)]=\"formModel.Cnpj\"\n                            required maxlength=\"18\" (input)=\"FilterCnpj(Cnpj.value)\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Senha</label>\n                        <input type=\"password\" class=\"form-control\" #Senha=\"ngModel\" name=\"Senha\"\n                            [(ngModel)]=\"formModel.Senha\" required>\n                    </div>\n                    <div class=\"row justify-content-end mb-4\">\n                        <div class=\"col-auto\">\n                            <small class=\"float-right color-white\">\n                                <a routerLink=\"/request-password-reset\">Esqueci minha senha</a>\n                            </small>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-8 offset-md-2\">\n                            <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"form.invalid\">Entrar</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-auto\">\n                            <small class=\"float-right color-white\">\n                                Novo por aqui? <a routerLink=\"../register\">Faça seu cadastro</a>\n                            </small>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogout(){\n    localStorage.removeItem(\"token\");\n    this.router.navigate(['login']);\n  }\n\n  home(){\n    this.router.navigate([\"simulador/home\"])\n  }\n\n\n\n}\n","<nav class=\"navbar navbar-light bg-light\">\n    <div class=\"navbar-brand\" (click)=\"home()\">Diagnóstico de Gestão Financeira</div>\n    <form class=\"form-inline\">\n      <button class=\"btn btn-outline-secondary my-2 my-sm-0\" (click)=\"onLogout()\">Logout</button>\n    </form>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from 'src/services/usuario.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(public service: UsuarioService,private toastr:ToastrService,private router :Router) { }\n\n\n\n  ngOnInit() {\n    \n  }\n\n  FilterCnpj(value) {\n    var cnpj = value + '';\n    cnpj = cnpj.replace(/\\D/g, '');\n    cnpj = cnpj.replace(/^(\\d{2})(\\d)/, '$1.$2');\n    cnpj = cnpj.replace(/^(\\d{2})\\.(\\d{3})(\\d)/, '$1.$2.$3');\n    cnpj = cnpj.replace(/\\.(\\d{3})(\\d)/, '.$1/$2');\n    cnpj = cnpj.replace(/(\\d{4})(\\d)/, '$1-$2');\n    return cnpj;\n  }\n\n  onSubmit() {   \n      this.service.CadastrarUsuario().subscribe((res:any)=>{\n        this.service.formModel.reset();\n        this.toastr.success(\"Seja bem vindo!\",\"Usuário cadastrado com sucesso!\");\n        this.router.navigateByUrl(\"login\");\n      },(error:any)=>{\n        error.error.forEach(element => {\n          this.toastr.error(element.message,\"Falha no registro\");          \n        })\n      })\n  }\n}\n","<div class=\"wrapper\">\n    <div class=\"box-register\">\n        <div class=\"row\">\n            <div class=\"col-md-10 offset-md-1\">\n                <form [formGroup]=\"service.formModel\" class=\"mb-4\" autocomplete=\"off\" (submit)=\"onSubmit()\">\n                    <div class=\"form-group required\">\n                        <label>Nome Completo</label>\n                        <input class=\"form-control\" formControlName=\"FullName\" [ngClass]=\"{'is-valid': service.formModel.get('FullName').touched && service.formModel.get('FullName').valid, 'is-invalid':service.formModel.get('FullName').touched && service.formModel.get('FullName').errors?.required}\">\n                        <label class=\"text-danger\"\n                            *ngIf=\"service.formModel.get('FullName').touched && service.formModel.get('FullName').errors?.required\">Esse\n                            campo é obrigatório</label>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>E-mail</label>\n                                <input class=\"form-control\" formControlName=\"Email\" [ngClass]=\"{'is-valid': service.formModel.get('Email').touched && service.formModel.get('Email').valid, 'is-invalid':service.formModel.get('Email').touched && service.formModel.get('Email').errors?.email}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Email').touched && service.formModel.get('Email').errors?.email\">E-mail\n                                    invalido</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>CNPJ</label>\n                                <input class=\"form-control\" #Cnpj formControlName=\"Cnpj\" CnpjFilter\n                                    [value]=\"FilterCnpj(service.formModel.get('Cnpj').value)\" maxlength=\"18\" [ngClass]=\"{'is-valid': service.formModel.get('Cnpj').touched && service.formModel.get('Cnpj').valid, 'is-invalid':service.formModel.get('Cnpj').touched && service.formModel.get('Cnpj').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Cnpj').touched && service.formModel.get('Cnpj').errors?.required\">Esse\n                                    campo é obrigatório</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Telefone</label>\n                                <input class=\"form-control\" formControlName=\"Telefone\" [ngClass]=\"{'is-valid': service.formModel.get('Telefone').touched && service.formModel.get('Telefone').valid, 'is-invalid':service.formModel.get('Telefone').touched && service.formModel.get('Telefone').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Telefone').touched && service.formModel.get('Telefone').errors?.required\">Esse campo é obrigatório</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group\" >\n                                <label>Tipo Telefone</label>\n                                <select name=\"\" class=\"custom-select\" formControlName=\"TipoTelefone\">\n                                    <option selected>Selecione</option>\n                                    <option value=\"0\">Celular</option>\n                                    <option value=\"1\">Fixo</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Tipo Empresa</label>\n                                <select name=\"\" class=\"custom-select\" formControlName=\"TipoEmpresa\">\n                                    <option selected>Selecione</option>\n                                    <option value=\"0\">MEI</option>\n                                    <option value=\"1\">ME</option>\n                                    <option value=\"2\">EPP</option>\n                                    <option value=\"3\">Produtor Rural</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Razão Social</label>\n                                <input class=\"form-control\" formControlName=\"RazaoSocial\" [ngClass]=\"{'is-valid': service.formModel.get('RazaoSocial').touched && service.formModel.get('RazaoSocial').valid, 'is-invalid':service.formModel.get('RazaoSocial').touched && service.formModel.get('RazaoSocial').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('RazaoSocial').touched && service.formModel.get('RazaoSocial').errors?.required\">Esse campo é obrigatório</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Qual seu principal produto/serviço:</label>\n                                <input class=\"form-control\" formControlName=\"Produto\" [ngClass]=\"{'is-valid': service.formModel.get('Produto').touched && service.formModel.get('Produto').valid, 'is-invalid':service.formModel.get('Produto').touched && service.formModel.get('Produto').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Produto').touched && service.formModel.get('Produto').errors?.required\">Esse campo é obrigatório</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Faturamento anual</label>\n                                <input class=\"form-control\" formControlName=\"Faturamento\" [ngClass]=\"{'is-valid': service.formModel.get('Faturamento').touched && service.formModel.get('Faturamento').valid, 'is-invalid':service.formModel.get('Faturamento').touched && service.formModel.get('Faturamento').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Faturamento').touched && service.formModel.get('Faturamento').errors?.required\">Esse campo é obrigatório</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div formGroupName=\"Passwords\">\n                        <div class=\"form-group required\">\n                            <label>Senha</label>\n                            <input type=\"password\" class=\"form-control\" formControlName=\"Senha\" minlength=\"6\" [ngClass]=\"{'is-valid': service.formModel.get('Passwords.Senha').touched && service.formModel.get('Passwords.Senha').valid, 'is-invalid':service.formModel.get('Passwords.Senha').touched && service.formModel.get('Passwords.Senha').errors?.minlength}\">\n                            <label class=\"text-danger\"\n                                *ngIf=\"service.formModel.get('Passwords.Senha').touched && service.formModel.get('Passwords.Senha').errors?.required\">Esse\n                                campo é obrigatório</label>\n                            <label class=\"text-danger\"\n                                *ngIf=\"service.formModel.get('Passwords.Senha').touched && service.formModel.get('Passwords.Senha').errors?.minlength\">Minimo\n                                6 characters</label>\n                        </div>\n                        <div class=\"form-group required\">\n                            <label>Confirm Senha</label>\n                            <input type=\"password\" class=\"form-control\" formControlName=\"ConfirmSenha\" [ngClass]=\"{'is-valid': service.formModel.get('Passwords.ConfirmSenha').touched && service.formModel.get('Passwords.ConfirmSenha').valid, 'is-invalid':service.formModel.get('Passwords.ConfirmSenha').touched && service.formModel.get('Passwords.ConfirmSenha').errors?.required && service.formModel.get('ConfirmSenha').errors?.passwordMismatch}\">\n                            <label class=\"text-danger\"\n                                *ngIf=\"service.formModel.get('Passwords.ConfirmSenha').touched && service.formModel.get('Passwords.ConfirmSenha').errors?.required\">Esse\n                                campo é obrigatório</label>\n                            <label class=\"text-danger\"\n                                *ngIf=\"service.formModel.get('Passwords.ConfirmSenha').touched && service.formModel.get('Passwords.ConfirmSenha').errors?.passwordMismatch\">As\n                                senhas não são compativeis</label>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-8 offset-md-2\">\n                            <button type=\"submit\" class=\"btn btn-lg btn-block\"\n                                [disabled]=\"!service.formModel.valid\">Cadastrar</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SimuladorService } from 'src/services/simulador.service';\nimport Canvg from 'canvg';\n\n@Component({\n  selector: 'app-resultado-chart',\n  templateUrl: './resultado-chart.component.html',\n  styleUrls: ['./resultado-chart.component.css']\n})\nexport class ResultadoChartComponent implements OnInit {\n\n  chart: any = {\n    title: \"\",\n    type: \"BarChart\",\n    roles: [\n      { role: 'style', type: 'string', index: 2 }\n    ],\n    data: [\n      // ['Copper', 0.3, 'orange'],            // RGB value\n      // ['Silver', 0.1, '#76A7FA'],            // English color name\n      // ['Gold', 19.30, 'gold'],\n      // ['Platinum', 21.45, 'color: #e5e4e2' ], // CSS-style declaration\n    ],\n    columnNames: [\"columnTeste2\", \"\"],\n    options: {\n      colors: ['#e0440e', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],\n      bar: { groupWidth: '50%' },\n      animation: {\n        duration: 1000,\n        easing: 'out',\n      },\n      annotations: {\n        alwaysOutside: true\n      },\n      hAxis: {\n        format: 'percent',\n        minValue: 0,\n        maxValue: 1,\n      },\n    },\n    formatter: [\n\n    ]\n  }\n\n  satisfacao\n  maturidade\n  constructor(private sService: SimuladorService) { }\n  ngOnInit(): void {\n    this.sService.GetResultadoEtapa1().subscribe((res: any) => {\n      this.maturidade = res.maturidade;\n      this.satisfacao = res.satisfacao;\n      console.log(res)\n      var valor: any = [\n        [\"Maturidade de finanças\", { v: res.maturidade / 100, f: res.maturidade + \"%\" }, 'orange'],\n        [\"Satisfação do empresário\", { v: res.satisfacao / 100, f: res.satisfacao + \"%\" }, '#76A7FA']\n      ];\n      // var valor: any = [\n      //   [\"Maturidade de finanças\", res.maturidade / 100, 'orange'],\n      //   [\"Satisfação do empresário\", res[1] / 100, '#76A7FA']\n      // ];\n      this.chart.data = (valor);\n      console.log(this.chart.data)\n    }, error => {\n\n    })\n  }\n\n  EnviarEmail() {\n    // var data = {\n    //   satisfacao : this.satisfacao,\n    //   maturidade : this.maturidade\n    // }\n    // this.sService.SendEmail(data).subscribe(res=>{\n    //   console.log(res)\n    // },error =>{\n    //   console.log(error)\n\n    // })\n    return new Promise((resolve) => {\n      var svgString = new XMLSerializer().serializeToString(document.querySelector('svg'));\n      this.ConvertToDataURLviaCanvas(svgString).then(x => {\n        this.sService.SendEmail(x).toPromise().then((x: string) => resolve(x))\n      })\n    })\n  }\n\n\n\n\n  ConvertToDataURLviaCanvas(svgString: any) {\n    // let outputFormat = (url.replace(/^.*[\\\\\\/]/, '').split(\".\").length > 1) ? url.replace(/^.*[\\\\\\/]/, '').split(\".\")[1] : \"jpeg\";\n    // let newurl = (url.replace(/^.*[\\\\\\/]/, '').split(\".\").length > 1) ? url.replace(/^.*[\\\\\\/]/, '') : url.replace(/^.*[\\\\\\/]/, '') + \".\" + outputFormat;\n    return new Promise((resolve, reject) => {\n      let img = new Image();\n      let canvas = <HTMLCanvasElement>document.createElement('CANVAS'),\n        ctx = canvas.getContext('2d'),\n        svg = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" }),\n        url = window.URL.createObjectURL(svg);\n      img.crossOrigin = 'Anonymous';\n      img.onload = () => {\n        let dataURL\n        canvas.height = img.height;\n        canvas.width = img.width;\n        ctx.drawImage(img, 0, 0);\n\n        dataURL = canvas.toDataURL(\"image/png\");\n        resolve(dataURL);\n        canvas = null;\n      };\n      img.src = url;\n\n    }).then((x: string) => this.Base64toBlob(x, \"resultado.png\", \"image/png\"));\n  }\n\n  Base64toBlob(dataURI: string, name: string, outputFormat: string) {\n    var byteString = atob(dataURI.split(',')[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return this.BlobToFile(new Blob([ab], { type: outputFormat }), name);\n  }\n\n  BlobToFile(blob: Blob, fileName: string): File {\n    var b: any = blob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n\n    //Cast to a File() type\n    return <File>blob;\n  }\n\n\n\n\n}\n","<div class=\"conteudo-wrapper\">\r\n  <div class=\"titulo\">\r\n    <img src=\"assets/images/titulo_resultado_etapa1.png\" alt=\"\" class=\"logo\">\r\n  </div>\r\n  <div class=\"conteudo\">\r\n    <div class=\"painel\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-auto\">\r\n          <div class=\"texto\">\r\n            <p>De acordo com suas respostas verificamos que:</p>\r\n\r\n            <p>Sua maturidade financeira é de : {{maturidade}}%</p>\r\n            <p>Sua satisfação é de: {{satisfacao}}%</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"resultado\">\r\n        <google-chart style=\"width: 100%;\" [title]=\"chart.title\" [roles]=\"chart.roles\" [type]=\"chart.type\"\r\n          [data]=\"chart.data\" [columnNames]=\"chart.columnNames\" [options]=\"chart.options\" [formatter]=\"chart.formatter\">\r\n        </google-chart>\r\n      </div>\r\n\r\n      <div class=\"row align-items-center footer\">\r\n        <div class=\"col-lg-auto\">\r\n          <a href=\"javascript:window.print()\"> <img src=\"assets/images/icone-impressao.png\" alt=\"\"></a>\r\n        </div>\r\n        <div class=\"col text-align-center\">\r\n          <button class=\"button alternative\" (click)=\"EnviarEmail()\">Enviar por E-mail</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resultado',\n  templateUrl: './resultado.component.html',\n  styleUrls: ['./resultado.component.css']\n})\nexport class ResultadoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-selecao',\n  templateUrl: './selecao.component.html',\n  styleUrls: ['./selecao.component.css']\n})\nexport class SelecaoComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onNext(nextRouter){\n    this.router.navigate(['simulador/'+nextRouter]);\n  }\n\n}\n","<div class=\"conteudo-wrapper\">\n    <div class=\"container\">\n        <div class=\"titulo\">\n            <h1>Escolha por onde Começar</h1>\n        </div>\n        <div class=\"row align-items-center\">\n            <div class=\"col-lg-4\">\n                <button class=\"etapa\" (click)=\"onNext('etapa1/0')\">Etapa 1</button>\n            </div>\n            <div class=\"col-lg-4\">\n                <button disabled class=\"etapa\" (click)=\"onNext('etapa2/0')\">Etapa 2</button>\n            </div>\n            <div class=\"col-lg-4\">\n                <button disabled class=\"etapa\" (click)=\"onNext('etapa3/0')\">Etapa 3</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SimuladorService } from 'src/services/simulador.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n@Component({\n  selector: 'app-etapa1',\n  templateUrl: './etapa1.component.html',\n  styleUrls: ['./etapa1.component.css']\n})\nexport class Etapa1Component implements OnInit {\n\n  tabela;\n  tabelaActive = false;\n  pergunta:any = 0;\n  constructor(private service: SimuladorService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap)=>{\n      this.pergunta = params.get(\"pergunta\");\n    })\n    \n    this.service.GetTabela(1).subscribe(res => {\n      console.log(res);\n      this.tabela = res;\n      this.tabelaActive = true;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  onNext(){\n    if(this.pergunta == this.tabela.campos.length - 1){\n      return '/etapa1/resultado'\n    }\n    else{\n      return <string>'etapa1/'+(parseInt(this.pergunta)+1)\n    }\n  }\n\n}\n","<div class=\"conteudo-wrapper\">\n    <ng-container *ngIf=\"tabelaActive\">\n        <img src=\"assets/images/titulo_etapa1.png\" alt=\"\" class=\"logo\">\n        <ng-container *ngFor=\"let campo of tabela?.campos; index as idx2\">\n            <div *ngIf=\"pergunta == idx2\">\n                <div class=\"row align-items-center mb-4\">\n                    <div class=\"col-auto\">\n                        <h1 class=\"titulo\">{{campo.texto}}</h1>\n                    </div>\n                    <div class=\"col-auto\">\n                        <span data-toggle=\"tooltip\" data-html=\"true\" [title]=\"campo.descricao\"><img class=\"icone\" src=\"assets/images/icon-descricao.png\" alt=\"\"></span>\n                    </div>\n                </div>                \n                <div class=\"conteudo\">\n                    <app-pergunta *ngFor=\"let pergunta of campo.subCampos\" [pergunta]=\"pergunta\"></app-pergunta>\n                </div>\n                <app-footer [nextRouter]=\"onNext()\">\n                    Próximo\n                </app-footer>\n            </div>\n        </ng-container>\n    </ng-container>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SimuladorService } from 'src/services/simulador.service';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\n\n@Component({\n  selector: 'app-resposta',\n  templateUrl: './campo-combobox.component.html',\n  styleUrls: ['./campo-combobox.component.css']\n})\nexport class CampoComboboxComponent implements OnInit {\n\n\n  @Input() respostas;\n  @Input() index;\n  active\n  usuario:any = {\n    resposta:\"\"\n  }\n  selectedEntry;\n\n  constructor(private service : SimuladorService,library: FaIconLibrary) {\n    library.addIconPacks(fas, far);\n   }\n\n\n  ngOnInit(): void {\n    var valor = 100 / (this.respostas.subCampos.length -1);\n    \n    this.service.GetCampoUsuario(this.respostas.id).subscribe(res => {\n      this.usuario = res;\n      this.respostas.subCampos.forEach((element,idx) => {\n        element.resposta = Math.round(valor * idx);    \n        this.active = this.usuario.resposta; \n        if(parseInt(this.usuario.resposta) == element.resposta){\n          // element.active = true;\n        }\n      });\n      console.log(res);\n    }, error => {\n      console.log(error)\n    });\n  }\n\n\n\n  getResposta(resposta){\n    this.active = resposta;\n    this.usuario.resposta = resposta;\n    this.service.SetCampoUsuario(this.usuario).subscribe(res=>{\n      console.log(res);\n    },error=>{\n      console.log(error);      \n    });\n  }\n\n}\n","\n\n    <app-campo *ngFor=\"let campo of respostas.subCampos;\" [campo]=\"campo\" [index]=\"index\" [active]=\"active\" (respostaEmitter)=\"getResposta($event)\"></app-campo>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n// import { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { NgForm } from '@angular/forms';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\n\n@Component({\n  selector: 'app-campo',\n  templateUrl: './campo.component.html',\n  styleUrls: ['./campo.component.css']\n})\nexport class CampoComponent implements OnInit {\n\n  @Input() campo: any;\n  @Input() index;\n  @Output() respostaEmitter = new EventEmitter();\n  @Input() active = false;\n\n  constructor(library: FaIconLibrary) {\n    library.addIconPacks(fas, far);\n  }\n\n  onChange() {\n    this.respostaEmitter.emit(this.campo.resposta);\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<label class=\"row align-items-center\">\n    <div class=\"col-auto\">\n        <fa-icon *ngIf=\"active!= campo.resposta\" [icon]=\"['far', 'circle']\"></fa-icon>\n        <fa-icon *ngIf=\"active == campo.resposta\" [icon]=\"['fas', 'circle']\"></fa-icon>\n        <input [hidden]=\"true\" type=\"radio\" [attr.name]=\"'nome'+index\" id=\"\" [value]=\"campo.resposta\" #teste=\"ngModel\" (ngModel)=\"active\"  (change)=\"onChange()\">\n    </div>\n\n    <div class=\"col\">{{campo.texto}}</div>\n</label>","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\ndeclare var $:any;\n\n@Component({\n  selector: 'app-pergunta',\n  templateUrl: './pergunta.component.html',\n  styleUrls: ['./pergunta.component.css']\n})\nexport class PerguntaComponent implements OnInit {\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  @Input() pergunta;\n  perguntaIndex;\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.perguntaIndex = params.get(\"pergunta\");\n      $('[data-toggle=\"tooltip\"]').tooltip({\n        animated: 'fade',\n        trigger: 'click'\n    });\n    })\n  }\n\n  \n\n}\n","<div class=\"mb-4\"> {{pergunta.texto}}</div>\n<ng-container *ngFor=\"let resposta of pergunta.subCampos;index as idx\">\n        <div *ngIf=\"idx == 1\" class=\"titulo mb-4\">{{resposta.texto}}</div>\n        <div class=\"pergunta\">\n                <app-resposta [respostas]=\"resposta\" [index]=\"idx\"></app-resposta>\n        </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-etapa2',\n  templateUrl: './etapa2.component.html',\n  styleUrls: ['./etapa2.component.css']\n})\nexport class Etapa2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>etapa2 works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { SimuladorService } from 'src/services/simulador.service';\n\n@Component({\n  selector: 'app-simulador',\n  templateUrl: './simulador.component.html',\n  styleUrls: ['./simulador.component.css']\n})\nexport class SimuladorComponent implements OnInit {\n\n  constructor(private service : SimuladorService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-menu></app-menu>\r\n<div class=\"container-wrapper\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n@Directive({\r\n    selector: '[CnpjFilter]'\r\n})\r\n\r\nexport class CnpjDirective {\r\n\r\n    @Input('decimals') decimals: number = 0;\r\n\r\n    private check(value: string, decimals: number) {\r\n        if (decimals <= 0) {\r\n            return String(value).match(new RegExp(/^[0-9./-]+$/));\r\n        } else {\r\n            //   var regExpString = \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" + decimals + \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + decimals + \"}))))\\\\s*$\"\r\n            var regExpString = \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" + decimals + \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + decimals + \"}))))\\\\s*$\"\r\n           \r\n            return String(value).match(new RegExp(regExpString));\r\n        }\r\n    }\r\n\r\n    private specialKeys = [\r\n        'Backspace', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight', 'Delete'\r\n    ];\r\n\r\n    constructor(private el: ElementRef) { }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        if (this.specialKeys.indexOf(event.key) !== -1) {\r\n            return;\r\n        }\r\n        // Do not use event.keycode this is deprecated.\r\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\r\n        let current: string = this.el.nativeElement.value;\r\n        let next: string = current.concat(event.key);\r\n        if (next && !this.check(next, this.decimals)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n@Directive({\r\n    selector: '[CpfFilter]'\r\n})\r\n\r\nexport class CpfDirective {\r\n\r\n    @Input('decimals') decimals: number = 0;\r\n\r\n    private check(value: string, decimals: number)\r\n    {\r\n      if (decimals <= 0) {\r\n        return String(value).match(new RegExp(/^[0-9.-]+$/));\r\n      } else {\r\n        //   var regExpString = \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" + decimals + \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + decimals + \"}))))\\\\s*$\"\r\n          var regExpString = \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" + decimals + \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + decimals + \"}))))\\\\s*$\"\r\n          return String(value).match(new RegExp(regExpString));\r\n      }\r\n    }\r\n\r\n    private specialKeys = [ \r\n        'Backspace', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight', 'Delete'\r\n      ];\r\n\r\n    constructor(private el: ElementRef) { }\r\n\r\n    @HostListener('keydown', [ '$event' ])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        if (this.specialKeys.indexOf(event.key) !== -1) {\r\n            return;\r\n        }\r\n        // Do not use event.keycode this is deprecated.\r\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\r\n        let current: string =this.el.nativeElement.value;\r\n        let next: string = current.concat(event.key);\r\n        if ( next && !this.check(next, this.decimals) ) {\r\n           event.preventDefault();\r\n        }\r\n    }    \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class AppSettings {\r\n    defaultUrl: string =\r\n          \"http://localhost:5001/api\"\r\n  }\r\n  ","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppSettings } from './appsettings';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class SimuladorService{\r\n    simulador\r\n    appsettings : AppSettings = new AppSettings();\r\n    constructor(private http : HttpClient){}\r\n\r\n\r\n    GetSimulador(){\r\n        return this.http.get(this.appsettings.defaultUrl+\"Simulador/BuscarSimulador\").toPromise().then(res=>{\r\n            this.simulador = res;\r\n        })\r\n    }\r\n\r\n    GetTabela(id){\r\n       return this.http.get(this.appsettings.defaultUrl+\"Simulador/BuscarTabela/\"+id);\r\n    }\r\n\r\n    GetCampoUsuario(id){\r\n        return this.http.get(this.appsettings.defaultUrl+\"Simulador/BuscarCampoUsuario/\"+id);\r\n    }\r\n    SetCampoUsuario(campoUsuario){\r\n        return this.http.post(this.appsettings.defaultUrl+\"Simulador/GravarCampoUsuario\",campoUsuario);\r\n    }\r\n\r\n    GetResultadoEtapa1(){\r\n        return this.http.get(this.appsettings.defaultUrl+\"Resultados/BuscarResultado\");\r\n    }\r\n\r\n    SendEmail(data){\r\n        var formData = new FormData();\r\n        formData.append(\"files\", data, data.name);    \r\n        return this.http.post(this.appsettings.defaultUrl+\"Resultados/EnviarResultadoEtapa1\",formData);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Usuario } from './interfaces/usuario.interface';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { AppSettings } from './appsettings';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioService {\r\n  // private appsettings.defaultUrl = \"assets/data/\";\r\n\r\n  usuario:Usuario;\r\n  appsettings : AppSettings = new AppSettings();\r\n  formModel = this.fb.group({\r\n    FullName: ['', Validators.required],\r\n    Cnpj: ['', Validators.required],\r\n    Email: ['', Validators.email],\r\n    Telefone: ['', Validators.required],\r\n    TipoTelefone: [''],\r\n    RazaoSocial: ['', Validators.required],\r\n    TipoEmpresa: ['', Validators.required],\r\n    Produto: ['', Validators.required],\r\n    Faturamento: ['', Validators.required],\r\n    Passwords: this.fb.group({\r\n      Senha: ['', [Validators.required, Validators.minLength(4)]],\r\n      ConfirmSenha: ['', Validators.required]\r\n    }, { validator: this.comparePasswords }),\r\n  })\r\n\r\n  constructor(private http: HttpClient, private fb: FormBuilder) {\r\n\r\n  }\r\n\r\n  comparePasswords(fb: FormGroup) {\r\n    let confirmPaswrdCtrl = fb.get(\"ConfirmSenha\");\r\n    //passwordMismatch\r\n    //confirmPswrdCtrl.error={passwordMismatch:true}\r\n    if (confirmPaswrdCtrl.errors == null || 'passwordMismatch' in confirmPaswrdCtrl.errors) {\r\n      if (fb.get('Senha').value != confirmPaswrdCtrl.value) {\r\n        confirmPaswrdCtrl.setErrors({ 'passwordMismatch': true });\r\n      }\r\n      else {\r\n        confirmPaswrdCtrl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  //   GetManifest(id): Observable<IManifest> {\r\n  //     return this.http.get<IManifest>(this.appsettings.defaultUrl + id + \"/manifest.json\");\r\n  //   }\r\n\r\n  CadastrarUsuario(): Observable<Usuario> {\r\n    var body = {\r\n      FullName: this.formModel.value.FullName,\r\n      Cnpj: this.formModel.value.Cnpj,\r\n      Senha: this.formModel.value.Passwords.Senha,\r\n      Email: this.formModel.value.Email,\r\n      Telefone: this.formModel.value.Telefone,\r\n      TipoTelefone: this.formModel.value.TipoTelefone,\r\n      TipoEmpresa : this.formModel.value.TipoEmpresa,\r\n      RazaoSocial: this.formModel.value.RazaoSocial,\r\n      Produto: this.formModel.value.Produto,\r\n      Faturamento : this.formModel.value.Faturamento.replace(\",\",\".\")\r\n    }\r\n    console.log(body)\r\n    return this.http.post<Usuario>(this.appsettings.defaultUrl + \"/Usuario/Cadastro\", body);\r\n  }\r\n\r\n  Login(data) {\r\n    return this.http.post(this.appsettings.defaultUrl + \"/Usuario/Login\", data);\r\n  }\r\n\r\n  GetUserProfile() {\r\n\r\n    return this.http.get(this.appsettings.defaultUrl + \"/Usuario/BuscarUsuario\")\r\n  }\r\n\r\n  GetAllUsuario() {\r\n    return this.http.get(this.appsettings.defaultUrl + \"/Usuario/BuscarUsuarios\")\r\n  }\r\n\r\n  SendPasswordReset(data){\r\n    return this.http.post(this.appsettings.defaultUrl+\"/Usuario/ResetPassword\",data);\r\n  }\r\n  \r\n\r\n  \r\n  SendPasswordChanged(data){\r\n    var response = {\r\n      Password : data.Passwords.Password,\r\n      Token : data.Token\r\n    }\r\n    return this.http.post(this.appsettings.defaultUrl+\"/Usuario/MudarPassword\",response);\r\n  }\r\n\r\n\r\n  ErrorHandler(error: HttpErrorResponse) {\r\n    return Observable.throw(error.message || \"Server Errror\");\r\n  }\r\n}\r\n"]}