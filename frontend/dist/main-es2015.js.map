{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/auth/auth.roles.ts","./src/app/auth/auth.service.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/instrucoes/instrucoes.component.ts","./src/app/instrucoes/instrucoes.component.html","./src/app/instrucoes/parte1/parte1.component.ts","./src/app/instrucoes/parte1/parte1.component.html","./src/app/instrucoes/parte2/parte2.component.ts","./src/app/instrucoes/parte2/parte2.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/resultado/resultado-chart/resultado-chart.component.ts","./src/app/resultado/resultado-chart/resultado-chart.component.html","./src/app/resultado/resultado.component.ts","./src/app/resultado/resultado.component.html","./src/app/selecao/selecao.component.ts","./src/app/selecao/selecao.component.html","./src/app/simulador/etapa1/etapa1.component.ts","./src/app/simulador/etapa1/etapa1.component.html","./src/app/simulador/etapa1/pergunta/campo-combobox/campo-combobox.component.ts","./src/app/simulador/etapa1/pergunta/campo-combobox/campo-combobox.component.html","./src/app/simulador/etapa1/pergunta/campo-combobox/campo/campo.component.ts","./src/app/simulador/etapa1/pergunta/campo-combobox/campo/campo.component.html","./src/app/simulador/etapa1/pergunta/pergunta.component.ts","./src/app/simulador/etapa1/pergunta/pergunta.component.html","./src/app/simulador/etapa2/etapa2.component.ts","./src/app/simulador/etapa2/etapa2.component.html","./src/app/simulador/simulador.component.ts","./src/app/simulador/simulador.component.html","./src/directives/cnpj.directive.ts","./src/directives/cpf.directive.ts","./src/environments/environment.ts","./src/main.ts","./src/services/appsettings.ts","./src/services/simulador.service.ts","./src/services/usuario.service.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ResultadoComponent } from './resultado/resultado.component';\nimport { ResultadoChartComponent } from './resultado/resultado-chart/resultado-chart.component';\nimport { SimuladorComponent } from './simulador/simulador.component';\nimport { Etapa1Component } from './simulador/etapa1/etapa1.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { InstrucoesComponent } from './instrucoes/instrucoes.component';\nimport { Parte1Component } from './instrucoes/parte1/parte1.component';\nimport { Parte2Component } from './instrucoes/parte2/parte2.component';\nimport { SelecaoComponent } from './selecao/selecao.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegistrationComponent },\n  {\n    path: \"simulador\", component: SimuladorComponent,\n    children: [\n      { path: \"home\", component: HomeComponent, canActivate: [AuthGuard] },\n      {\n        path: \"instrucoes\", component: InstrucoesComponent,\n        children: [\n          { path: \"parte1\", component: Parte1Component, canActivate: [AuthGuard] },\n          { path: \"parte2\", component: Parte2Component, canActivate: [AuthGuard] }\n        ],\n        canActivate: [AuthGuard]\n      },\n      { path: \"selecao\", component: SelecaoComponent, canActivate: [AuthGuard] },\n      { path: \"etapa1/resultado\", component: ResultadoChartComponent, canActivate: [AuthGuard] },\n      { path: \"etapa1/:pergunta\", component: Etapa1Component, canActivate: [AuthGuard] }\n    ]\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [\n  HomeComponent,\n  SimuladorComponent,\n  Etapa1Component,\n  ResultadoComponent,\n  ResultadoChartComponent,\n  LoginComponent,\n  RegistrationComponent,\n  InstrucoesComponent,\n  SelecaoComponent,\n  Parte1Component,\n  Parte2Component\n]\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Simulador-Web';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { PerguntaComponent } from './simulador/etapa1/pergunta/pergunta.component';\nimport { CampoComponent } from './simulador/etapa1/pergunta/campo-combobox/campo/campo.component';\nimport { CampoComboboxComponent } from './simulador/etapa1/pergunta/campo-combobox/campo-combobox.component';\nimport { Etapa2Component } from './simulador/etapa2/etapa2.component';\nimport { UsuarioService } from 'src/services/usuario.service';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { AuthService } from './auth/auth.service';\nimport { CpfDirective } from 'src/directives/cpf.directive';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CnpjDirective } from 'src/directives/cnpj.directive';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    CampoComboboxComponent,\n    CampoComponent,\n    PerguntaComponent,\n    Etapa2Component,\n    CpfDirective,\n    CnpjDirective,\n    MenuComponent,\n    FooterComponent,\n    \n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule.forRoot(),\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n    FontAwesomeModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    AuthService,\n    UsuarioService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router:Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean{\r\n      if(localStorage.getItem(\"token\")!=null)\r\n      return true;\r\n      else{\r\n        this.router.navigate([\"login\"]);\r\n        return false;\r\n      }\r\n    }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n    constructor(private router:Router){\r\n\r\n    }\r\n    intercept(req:HttpRequest<any>, next: HttpHandler):Observable<HttpEvent<any>>{\r\n        if(localStorage.getItem(\"token\") != null){\r\n            const clonedReq = req.clone({\r\n                headers : req.headers.set(\"Authorization\",\"Bearer \"+localStorage.getItem(\"token\"))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ=>{},\r\n                    err=>{\r\n                        if(err.status == 401){\r\n                            localStorage.removeItem(\"token\");\r\n                            this.router.navigateByUrl(\"login\");\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        }\r\n        else\r\n        return next.handle(req.clone());\r\n    }\r\n}\r\n","export enum AuthRole {   \r\n    Admin = 'ADMINISTRADOR',\r\n    Usuario = \"USUARIO\"\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthRole } from './auth.roles';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthService{\r\n\r\n    constructor(private router : Router){}\r\n    \r\n    CheckAuthorization(token){\r\n        var jwt  = this.ParseJwt(token);\r\n        if(jwt.accessControl == AuthRole.Admin){\r\n            this.router.navigate([\"simulador/home\"]);\r\n            localStorage.setItem(\"token\", token);\r\n            return true;\r\n        }\r\n        else if(jwt.accessControl == AuthRole.Usuario){\r\n            this.router.navigate([\"simulador/home\"]);\r\n            localStorage.setItem(\"token\", token);\r\n            return true;\r\n        }\r\n        localStorage.removeItem(\"token\");\r\n        this.router.navigate([\"login\"]);\r\n        return false;\r\n    }\r\n\r\n    ParseJwt (token) {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    \r\n        return JSON.parse(jsonPayload);\r\n    };\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n\n  @Input() nextRouter = \"\";\n  constructor(private router : Router) { }\n\n  onNext(){\n    console.log(this.nextRouter)\n    this.router.navigate(['simulador/'+this.nextRouter]);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button class=\"button\" (click)=\"onNext()\">\n    <ng-content></ng-content>\n</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div class=\"painel-wrapper\">\n    <div class=\"painel\">\n        <img src=\"assets/images/logo_diagnostico.png\" alt=\"\" class=\"logo\">\n\n        <div class=\"row\">\n            <div class=\"col\">\n                <img src=\"assets/images/logo.png\" alt=\"\" class=\"logo-sebrae\">\n            </div>\n        </div>\n    </div>\n</div>\n\n<app-footer [nextRouter]=\"'../instrucoes/parte1'\">\n    Iniciar\n</app-footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instrucoes',\n  templateUrl: './instrucoes.component.html',\n  styleUrls: ['./instrucoes.component.css']\n})\nexport class InstrucoesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"conteudo-wrapper\">\n    <div class=\"titulo\">\n        <img src=\"../../assets/images/instrucoes.png\" alt=\"\" class=\"instrucoes\">\n    </div>\n    <div class=\"conteudo\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parte1',\n  templateUrl: './parte1.component.html',\n  styleUrls: ['./parte1.component.css']\n})\nexport class Parte1Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p class=\"instrucao\">Para realizar o diagnóstico financeiro do seu negócio, você\n    poderá passar por três etapas:</p>\n<div class=\"row\">\n    <div class=\"col-lg-3\">\n        <div class=\"painel-instrucao\">\n            <img src=\"assets/images/icone1.png\" alt=\"\" class=\"\">\n            <p>Ao responder um pequeno questionário, você refletirá sobre a atual maturidade financeira\n                do seu negócio, além de medir o seu grau de satisfação.</p>\n        </div>\n    </div>\n    <div class=\"col-lg-6\">\n\n        <img src=\"assets/images/etapas.png\" alt=\"\" class=\"etapas\">\n\n        <div class=\"row justify-content-center\">\n            <div class=\"col-lg-6\">\n                <div class=\"painel-instrucao\">\n                    <img src=\"assets/images/icone2.png\" alt=\"\" class=\"\">\n                    <p>Ao responder um pequeno questionário, você refletirá sobre a atual maturidade financeira\n                        do seu negócio, além de medir o seu grau de satisfação.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3\">\n        <div class=\"painel-instrucao\">\n            <img src=\"assets/images/icone3.png\" alt=\"\" class=\"\">\n            <p>Ao responder um pequeno questionário, você refletirá sobre a atual maturidade financeira\n                do seu negócio, além de medir o seu grau de satisfação.</p>\n        </div>\n    </div>\n</div>\n<app-footer [nextRouter]=\"'instrucoes/parte2'\">\n    Próximo\n</app-footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parte2',\n  templateUrl: './parte2.component.html',\n  styleUrls: ['./parte2.component.css']\n})\nexport class Parte2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"instrucao\">\n    <h1 class=\"titulo\">Animado para começar?</h1>\n\n    <p class=\"text-align-center\">Saiba que esta ferramenta de diagnóstico é autoexplicativa, portanto para facilitar seu\n        entendimento, no decorrer\n        das\n        etapas você poderá consultar a maioria dos termos utilizados aqui, clicando sobre a lâmpada ou lendo o conceito\n        dentro das caixas.</p>\n\n    <p class=\"col\">Veja:</p>\n</div>\n\n<picture>\n    <source media=\"(max-width: 992px)\" srcset=\"assets/images/imagem-instrucao-mobile.png\">\n    <img src=\"assets/images/imagem-instrucao.png\" alt=\"\" class=\"imagem\">\n</picture>\n\n<app-footer [nextRouter]=\"'selecao'\">\n    Próximo\n</app-footer>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioService } from 'src/services/usuario.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  formModel = {\n    Cnpj: '',\n    Senha: ''\n  }\n  constructor(private _service: UsuarioService, private authService: AuthService, private toastr: ToastrService) { }\n\n  ngOnInit() { }\n\n  FilterCnpj(value) {\n    var cnpj = value + '';\n    cnpj = cnpj.replace(/\\D/g, '');\n    cnpj = cnpj.replace(/^(\\d{2})(\\d)/, '$1.$2');\n    cnpj = cnpj.replace(/^(\\d{2})\\.(\\d{3})(\\d)/, '$1.$2.$3');\n    cnpj = cnpj.replace(/\\.(\\d{3})(\\d)/, '.$1/$2');\n    cnpj = cnpj.replace(/(\\d{4})(\\d)/, '$1-$2');\n    this.formModel.Cnpj = cnpj;\n  }\n\n  onSubmit(form: NgForm) {\n    this._service.Login(form.value).subscribe((res: any) => {   \n      console.log(res.token)  \n      this.authService.CheckAuthorization(res.token);\n    }, error => {\n      this.toastr.error(error.error.message, \"Falha ao tentar logar\");\n    })\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"box-login\">\n        <h1>Diagnóstico Gestão Financeira</h1>\n        <label>Digite seus dados para realizar o login</label>\n        <div class=\"row\">\n            <div class=\"col\">\n                <form #form=\"ngForm\" class=\"mb-4\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n                    <div class=\"form-group\">\n                        <label>CNPJ</label>\n                        <input class=\"form-control\" #Cnpj=\"ngModel\" name=\"Cnpj\" CnpjFilter [(ngModel)]=\"formModel.Cnpj\"\n                            required maxlength=\"18\" (input)=\"FilterCnpj(Cnpj.value)\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Senha</label>\n                        <input type=\"password\" class=\"form-control\" #Senha=\"ngModel\" name=\"Senha\"\n                            [(ngModel)]=\"formModel.Senha\" required>\n                    </div>\n                    <div class=\"row justify-content-end mb-4\">\n                        <div class=\"col-auto\">\n                            <small class=\"float-right color-white\">\n                                <a routerLink=\"/request-password-reset\">Esqueci minha senha</a>\n                            </small>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-8 offset-md-2\">\n                            <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"form.invalid\">Entrar</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-auto\">\n                            <small class=\"float-right color-white\">\n                                Novo por aqui? <a routerLink=\"../register\">Faça seu cadastro</a>\n                            </small>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogout(){\n    localStorage.removeItem(\"token\");\n    this.router.navigate(['login']);\n  }\n\n  home(){\n    this.router.navigate([\"simulador/home\"])\n  }\n\n\n\n}\n","<nav class=\"navbar navbar-light bg-light\">\n    <div class=\"navbar-brand\" (click)=\"home()\">Diagnóstico de Gestão Financeira</div>\n    <form class=\"form-inline\">\n      <button class=\"btn btn-outline-secondary my-2 my-sm-0\" (click)=\"onLogout()\">Logout</button>\n    </form>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from 'src/services/usuario.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(public service: UsuarioService,private toastr:ToastrService,private router :Router) { }\n\n\n\n  ngOnInit() {\n    \n  }\n\n  FilterCnpj(value) {\n    var cnpj = value + '';\n    cnpj = cnpj.replace(/\\D/g, '');\n    cnpj = cnpj.replace(/^(\\d{2})(\\d)/, '$1.$2');\n    cnpj = cnpj.replace(/^(\\d{2})\\.(\\d{3})(\\d)/, '$1.$2.$3');\n    cnpj = cnpj.replace(/\\.(\\d{3})(\\d)/, '.$1/$2');\n    cnpj = cnpj.replace(/(\\d{4})(\\d)/, '$1-$2');\n    return cnpj;\n  }\n\n  onSubmit() {   \n      this.service.CadastrarUsuario().subscribe((res:any)=>{\n        this.service.formModel.reset();\n        this.toastr.success(\"Seja bem vindo!\",\"Usuário cadastrado com sucesso!\");\n        this.router.navigateByUrl(\"login\");\n      },(error:any)=>{\n        error.error.forEach(element => {\n          this.toastr.error(element.message,\"Falha no registro\");          \n        })\n      })\n  }\n}\n","<div class=\"wrapper\">\n    <div class=\"box-register\">\n        <div class=\"row\">\n            <div class=\"col-md-10 offset-md-1\">\n                <form [formGroup]=\"service.formModel\" class=\"mb-4\" autocomplete=\"off\" (submit)=\"onSubmit()\">\n                    <div class=\"form-group required\">\n                        <label>Nome Completo</label>\n                        <input class=\"form-control\" formControlName=\"FullName\" [ngClass]=\"{'is-valid': service.formModel.get('FullName').touched && service.formModel.get('FullName').valid, 'is-invalid':service.formModel.get('FullName').touched && service.formModel.get('FullName').errors?.required}\">\n                        <label class=\"text-danger\"\n                            *ngIf=\"service.formModel.get('FullName').touched && service.formModel.get('FullName').errors?.required\">Esse\n                            campo é obrigatório</label>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>E-mail</label>\n                                <input class=\"form-control\" formControlName=\"Email\" [ngClass]=\"{'is-valid': service.formModel.get('Email').touched && service.formModel.get('Email').valid, 'is-invalid':service.formModel.get('Email').touched && service.formModel.get('Email').errors?.email}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Email').touched && service.formModel.get('Email').errors?.email\">E-mail\n                                    invalido</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>CNPJ</label>\n                                <input class=\"form-control\" #Cnpj formControlName=\"Cnpj\" CnpjFilter\n                                    [value]=\"FilterCnpj(service.formModel.get('Cnpj').value)\" maxlength=\"18\" [ngClass]=\"{'is-valid': service.formModel.get('Cnpj').touched && service.formModel.get('Cnpj').valid, 'is-invalid':service.formModel.get('Cnpj').touched && service.formModel.get('Cnpj').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Cnpj').touched && service.formModel.get('Cnpj').errors?.required\">Esse\n                                    campo é obrigatório</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Telefone</label>\n                                <input class=\"form-control\" formControlName=\"Telefone\" [ngClass]=\"{'is-valid': service.formModel.get('Telefone').touched && service.formModel.get('Telefone').valid, 'is-invalid':service.formModel.get('Telefone').touched && service.formModel.get('Telefone').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Telefone').touched && service.formModel.get('Telefone').errors?.required\">Esse campo é obrigatório</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group\" >\n                                <label>Tipo Telefone</label>\n                                <select name=\"\" class=\"custom-select\" formControlName=\"TipoTelefone\">\n                                    <option selected>Selecione</option>\n                                    <option value=\"0\">Celular</option>\n                                    <option value=\"1\">Fixo</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Tipo Empresa</label>\n                                <select name=\"\" class=\"custom-select\" formControlName=\"TipoEmpresa\">\n                                    <option selected>Selecione</option>\n                                    <option value=\"0\">MEI</option>\n                                    <option value=\"1\">ME</option>\n                                    <option value=\"2\">EPP</option>\n                                    <option value=\"3\">Produtor Rural</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Razão Social</label>\n                                <input class=\"form-control\" formControlName=\"RazaoSocial\" [ngClass]=\"{'is-valid': service.formModel.get('RazaoSocial').touched && service.formModel.get('RazaoSocial').valid, 'is-invalid':service.formModel.get('RazaoSocial').touched && service.formModel.get('RazaoSocial').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('RazaoSocial').touched && service.formModel.get('RazaoSocial').errors?.required\">Esse campo é obrigatório</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Qual seu principal produto/serviço:</label>\n                                <input class=\"form-control\" formControlName=\"Produto\" [ngClass]=\"{'is-valid': service.formModel.get('Produto').touched && service.formModel.get('Produto').valid, 'is-invalid':service.formModel.get('Produto').touched && service.formModel.get('Produto').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Produto').touched && service.formModel.get('Produto').errors?.required\">Esse campo é obrigatório</label>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <div class=\"form-group required\">\n                                <label>Faturamento anual</label>\n                                <input class=\"form-control\" formControlName=\"Faturamento\" [ngClass]=\"{'is-valid': service.formModel.get('Faturamento').touched && service.formModel.get('Faturamento').valid, 'is-invalid':service.formModel.get('Faturamento').touched && service.formModel.get('Faturamento').errors?.required}\">\n                                <label class=\"text-danger\"\n                                    *ngIf=\"service.formModel.get('Faturamento').touched && service.formModel.get('Faturamento').errors?.required\">Esse campo é obrigatório</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div formGroupName=\"Passwords\">\n                        <div class=\"form-group required\">\n                            <label>Senha</label>\n                            <input type=\"password\" class=\"form-control\" formControlName=\"Senha\" minlength=\"6\" [ngClass]=\"{'is-valid': service.formModel.get('Passwords.Senha').touched && service.formModel.get('Passwords.Senha').valid, 'is-invalid':service.formModel.get('Passwords.Senha').touched && service.formModel.get('Passwords.Senha').errors?.minlength}\">\n                            <label class=\"text-danger\"\n                                *ngIf=\"service.formModel.get('Passwords.Senha').touched && service.formModel.get('Passwords.Senha').errors?.required\">Esse\n                                campo é obrigatório</label>\n                            <label class=\"text-danger\"\n                                *ngIf=\"service.formModel.get('Passwords.Senha').touched && service.formModel.get('Passwords.Senha').errors?.minlength\">Minimo\n                                6 characters</label>\n                        </div>\n                        <div class=\"form-group required\">\n                            <label>Confirm Senha</label>\n                            <input type=\"password\" class=\"form-control\" formControlName=\"ConfirmSenha\" [ngClass]=\"{'is-valid': service.formModel.get('Passwords.ConfirmSenha').touched && service.formModel.get('Passwords.ConfirmSenha').valid, 'is-invalid':service.formModel.get('Passwords.ConfirmSenha').touched && service.formModel.get('Passwords.ConfirmSenha').errors?.required && service.formModel.get('ConfirmSenha').errors?.passwordMismatch}\">\n                            <label class=\"text-danger\"\n                                *ngIf=\"service.formModel.get('Passwords.ConfirmSenha').touched && service.formModel.get('Passwords.ConfirmSenha').errors?.required\">Esse\n                                campo é obrigatório</label>\n                            <label class=\"text-danger\"\n                                *ngIf=\"service.formModel.get('Passwords.ConfirmSenha').touched && service.formModel.get('Passwords.ConfirmSenha').errors?.passwordMismatch\">As\n                                senhas não são compativeis</label>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-8 offset-md-2\">\n                            <button type=\"submit\" class=\"btn btn-lg btn-block\"\n                                [disabled]=\"!service.formModel.valid\">Cadastrar</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SimuladorService } from 'src/services/simulador.service';\nimport Canvg from 'canvg';\n\n@Component({\n  selector: 'app-resultado-chart',\n  templateUrl: './resultado-chart.component.html',\n  styleUrls: ['./resultado-chart.component.css']\n})\nexport class ResultadoChartComponent implements OnInit {\n\n  chart: any = {\n    title: \"\",\n    type: \"BarChart\",\n    roles: [\n      { role: 'style', type: 'string', index: 2 }\n    ],\n    data: [\n      // ['Copper', 0.3, 'orange'],            // RGB value\n      // ['Silver', 0.1, '#76A7FA'],            // English color name\n      // ['Gold', 19.30, 'gold'],\n      // ['Platinum', 21.45, 'color: #e5e4e2' ], // CSS-style declaration\n    ],\n    columnNames: [\"columnTeste2\", \"\"],\n    options: {\n      colors: ['#e0440e', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],\n      bar: { groupWidth: '50%' },\n      animation: {\n        duration: 1000,\n        easing: 'out',\n      },\n      annotations: {\n        alwaysOutside: true\n      },\n      hAxis: {\n        format: 'percent',\n        minValue: 0,\n        maxValue: 1,\n      },\n    },\n    formatter: [\n\n    ]\n  }\n\n  satisfacao\n  maturidade\n  constructor(private sService: SimuladorService) { }\n  ngOnInit(): void {\n    this.sService.GetResultadoEtapa1().subscribe((res: any) => {\n      this.maturidade = res.maturidade;\n      this.satisfacao = res.satisfacao;\n      console.log(res)\n      var valor: any = [\n        [\"Maturidade de finanças\", { v: res.maturidade / 100, f: res.maturidade + \"%\" }, 'orange'],\n        [\"Satisfação do empresário\", { v: res.satisfacao / 100, f: res.satisfacao + \"%\" }, '#76A7FA']\n      ];\n      // var valor: any = [\n      //   [\"Maturidade de finanças\", res.maturidade / 100, 'orange'],\n      //   [\"Satisfação do empresário\", res[1] / 100, '#76A7FA']\n      // ];\n      this.chart.data = (valor);\n      console.log(this.chart.data)\n    }, error => {\n\n    })\n  }\n\n  EnviarEmail() {\n    // var data = {\n    //   satisfacao : this.satisfacao,\n    //   maturidade : this.maturidade\n    // }\n    // this.sService.SendEmail(data).subscribe(res=>{\n    //   console.log(res)\n    // },error =>{\n    //   console.log(error)\n\n    // })\n    return new Promise((resolve) => {\n      var svgString = new XMLSerializer().serializeToString(document.querySelector('svg'));\n      this.ConvertToDataURLviaCanvas(svgString).then(x => {\n        this.sService.SendEmail(x).toPromise().then((x: string) => resolve(x))\n      })\n    })\n  }\n\n\n\n\n  ConvertToDataURLviaCanvas(svgString: any) {\n    // let outputFormat = (url.replace(/^.*[\\\\\\/]/, '').split(\".\").length > 1) ? url.replace(/^.*[\\\\\\/]/, '').split(\".\")[1] : \"jpeg\";\n    // let newurl = (url.replace(/^.*[\\\\\\/]/, '').split(\".\").length > 1) ? url.replace(/^.*[\\\\\\/]/, '') : url.replace(/^.*[\\\\\\/]/, '') + \".\" + outputFormat;\n    return new Promise((resolve, reject) => {\n      let img = new Image();\n      let canvas = <HTMLCanvasElement>document.createElement('CANVAS'),\n        ctx = canvas.getContext('2d'),\n        svg = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" }),\n        url = window.URL.createObjectURL(svg);\n      img.crossOrigin = 'Anonymous';\n      img.onload = () => {\n        let dataURL\n        canvas.height = img.height;\n        canvas.width = img.width;\n        ctx.drawImage(img, 0, 0);\n\n        dataURL = canvas.toDataURL(\"image/png\");\n        resolve(dataURL);\n        canvas = null;\n      };\n      img.src = url;\n\n    }).then((x: string) => this.Base64toBlob(x, \"resultado.png\", \"image/png\"));\n  }\n\n  Base64toBlob(dataURI: string, name: string, outputFormat: string) {\n    var byteString = atob(dataURI.split(',')[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return this.BlobToFile(new Blob([ab], { type: outputFormat }), name);\n  }\n\n  BlobToFile(blob: Blob, fileName: string): File {\n    var b: any = blob;\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n\n    //Cast to a File() type\n    return <File>blob;\n  }\n\n\n\n\n}\n","<div class=\"conteudo-wrapper\">\r\n  <div class=\"titulo\">\r\n    <img src=\"assets/images/titulo_resultado_etapa1.png\" alt=\"\" class=\"logo\">\r\n  </div>\r\n  <div class=\"conteudo\">\r\n    <div class=\"painel\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-auto\">\r\n          <div class=\"texto\">\r\n            <p>De acordo com suas respostas verificamos que:</p>\r\n\r\n            <p>Sua maturidade financeira é de : {{maturidade}}%</p>\r\n            <p>Sua satisfação é de: {{satisfacao}}%</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"resultado\">\r\n        <google-chart style=\"width: 100%;\" [title]=\"chart.title\" [roles]=\"chart.roles\" [type]=\"chart.type\"\r\n          [data]=\"chart.data\" [columnNames]=\"chart.columnNames\" [options]=\"chart.options\" [formatter]=\"chart.formatter\">\r\n        </google-chart>\r\n      </div>\r\n\r\n      <div class=\"row align-items-center footer\">\r\n        <div class=\"col-lg-auto\">\r\n          <a href=\"javascript:window.print()\"> <img src=\"assets/images/icone-impressao.png\" alt=\"\"></a>\r\n        </div>\r\n        <div class=\"col text-align-center\">\r\n          <button class=\"button alternative\" (click)=\"EnviarEmail()\">Enviar por E-mail</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resultado',\n  templateUrl: './resultado.component.html',\n  styleUrls: ['./resultado.component.css']\n})\nexport class ResultadoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-selecao',\n  templateUrl: './selecao.component.html',\n  styleUrls: ['./selecao.component.css']\n})\nexport class SelecaoComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onNext(nextRouter){\n    this.router.navigate(['simulador/'+nextRouter]);\n  }\n\n}\n","<div class=\"conteudo-wrapper\">\n    <div class=\"container\">\n        <div class=\"titulo\">\n            <h1>Escolha por onde Começar</h1>\n        </div>\n        <div class=\"row align-items-center\">\n            <div class=\"col-lg-4\">\n                <button class=\"etapa\" (click)=\"onNext('etapa1/0')\">Etapa 1</button>\n            </div>\n            <div class=\"col-lg-4\">\n                <button disabled class=\"etapa\" (click)=\"onNext('etapa2/0')\">Etapa 2</button>\n            </div>\n            <div class=\"col-lg-4\">\n                <button disabled class=\"etapa\" (click)=\"onNext('etapa3/0')\">Etapa 3</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SimuladorService } from 'src/services/simulador.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n@Component({\n  selector: 'app-etapa1',\n  templateUrl: './etapa1.component.html',\n  styleUrls: ['./etapa1.component.css']\n})\nexport class Etapa1Component implements OnInit {\n\n  tabela;\n  tabelaActive = false;\n  pergunta:any = 0;\n  constructor(private service: SimuladorService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap)=>{\n      this.pergunta = params.get(\"pergunta\");\n    })\n    \n    this.service.GetTabela(1).subscribe(res => {\n      console.log(res);\n      this.tabela = res;\n      this.tabelaActive = true;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  onNext(){\n    if(this.pergunta == this.tabela.campos.length - 1){\n      return '/etapa1/resultado'\n    }\n    else{\n      return <string>'etapa1/'+(parseInt(this.pergunta)+1)\n    }\n  }\n\n}\n","<div class=\"conteudo-wrapper\">\n    <ng-container *ngIf=\"tabelaActive\">\n        <img src=\"assets/images/titulo_etapa1.png\" alt=\"\" class=\"logo\">\n        <ng-container *ngFor=\"let campo of tabela?.campos; index as idx2\">\n            <div *ngIf=\"pergunta == idx2\">\n                <div class=\"row align-items-center mb-4\">\n                    <div class=\"col-auto\">\n                        <h1 class=\"titulo\">{{campo.texto}}</h1>\n                    </div>\n                    <div class=\"col-auto\">\n                        <span data-toggle=\"tooltip\" data-html=\"true\" [title]=\"campo.descricao\"><img class=\"icone\" src=\"assets/images/icon-descricao.png\" alt=\"\"></span>\n                    </div>\n                </div>                \n                <div class=\"conteudo\">\n                    <app-pergunta *ngFor=\"let pergunta of campo.subCampos\" [pergunta]=\"pergunta\"></app-pergunta>\n                </div>\n                <app-footer [nextRouter]=\"onNext()\">\n                    Próximo\n                </app-footer>\n            </div>\n        </ng-container>\n    </ng-container>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SimuladorService } from 'src/services/simulador.service';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\n\n@Component({\n  selector: 'app-resposta',\n  templateUrl: './campo-combobox.component.html',\n  styleUrls: ['./campo-combobox.component.css']\n})\nexport class CampoComboboxComponent implements OnInit {\n\n\n  @Input() respostas;\n  @Input() index;\n  active\n  usuario:any = {\n    resposta:\"\"\n  }\n  selectedEntry;\n\n  constructor(private service : SimuladorService,library: FaIconLibrary) {\n    library.addIconPacks(fas, far);\n   }\n\n\n  ngOnInit(): void {\n    var valor = 100 / (this.respostas.subCampos.length -1);\n    \n    this.service.GetCampoUsuario(this.respostas.id).subscribe(res => {\n      this.usuario = res;\n      this.respostas.subCampos.forEach((element,idx) => {\n        element.resposta = Math.round(valor * idx);    \n        this.active = this.usuario.resposta; \n        if(parseInt(this.usuario.resposta) == element.resposta){\n          // element.active = true;\n        }\n      });\n      console.log(res);\n    }, error => {\n      console.log(error)\n    });\n  }\n\n\n\n  getResposta(resposta){\n    this.active = resposta;\n    this.usuario.resposta = resposta;\n    this.service.SetCampoUsuario(this.usuario).subscribe(res=>{\n      console.log(res);\n    },error=>{\n      console.log(error);      \n    });\n  }\n\n}\n","\n\n    <app-campo *ngFor=\"let campo of respostas.subCampos;\" [campo]=\"campo\" [index]=\"index\" [active]=\"active\" (respostaEmitter)=\"getResposta($event)\"></app-campo>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n// import { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { NgForm } from '@angular/forms';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\n\n@Component({\n  selector: 'app-campo',\n  templateUrl: './campo.component.html',\n  styleUrls: ['./campo.component.css']\n})\nexport class CampoComponent implements OnInit {\n\n  @Input() campo: any;\n  @Input() index;\n  @Output() respostaEmitter = new EventEmitter();\n  @Input() active = false;\n\n  constructor(library: FaIconLibrary) {\n    library.addIconPacks(fas, far);\n  }\n\n  onChange() {\n    this.respostaEmitter.emit(this.campo.resposta);\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<label class=\"row align-items-center\">\n    <div class=\"col-auto\">\n        <fa-icon *ngIf=\"active!= campo.resposta\" [icon]=\"['far', 'circle']\"></fa-icon>\n        <fa-icon *ngIf=\"active == campo.resposta\" [icon]=\"['fas', 'circle']\"></fa-icon>\n        <input [hidden]=\"true\" type=\"radio\" [attr.name]=\"'nome'+index\" id=\"\" [value]=\"campo.resposta\" #teste=\"ngModel\" (ngModel)=\"active\"  (change)=\"onChange()\">\n    </div>\n\n    <div class=\"col\">{{campo.texto}}</div>\n</label>","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\ndeclare var $:any;\n\n@Component({\n  selector: 'app-pergunta',\n  templateUrl: './pergunta.component.html',\n  styleUrls: ['./pergunta.component.css']\n})\nexport class PerguntaComponent implements OnInit {\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  @Input() pergunta;\n  perguntaIndex;\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.perguntaIndex = params.get(\"pergunta\");\n      $('[data-toggle=\"tooltip\"]').tooltip({\n        animated: 'fade',\n        trigger: 'click'\n    });\n    })\n  }\n\n  \n\n}\n","<div class=\"mb-4\"> {{pergunta.texto}}</div>\n<ng-container *ngFor=\"let resposta of pergunta.subCampos;index as idx\">\n        <div *ngIf=\"idx == 1\" class=\"titulo mb-4\">{{resposta.texto}}</div>\n        <div class=\"pergunta\">\n                <app-resposta [respostas]=\"resposta\" [index]=\"idx\"></app-resposta>\n        </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-etapa2',\n  templateUrl: './etapa2.component.html',\n  styleUrls: ['./etapa2.component.css']\n})\nexport class Etapa2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>etapa2 works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { SimuladorService } from 'src/services/simulador.service';\n\n@Component({\n  selector: 'app-simulador',\n  templateUrl: './simulador.component.html',\n  styleUrls: ['./simulador.component.css']\n})\nexport class SimuladorComponent implements OnInit {\n\n  constructor(private service : SimuladorService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-menu></app-menu>\r\n<div class=\"container-wrapper\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n@Directive({\r\n    selector: '[CnpjFilter]'\r\n})\r\n\r\nexport class CnpjDirective {\r\n\r\n    @Input('decimals') decimals: number = 0;\r\n\r\n    private check(value: string, decimals: number) {\r\n        if (decimals <= 0) {\r\n            return String(value).match(new RegExp(/^[0-9./-]+$/));\r\n        } else {\r\n            //   var regExpString = \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" + decimals + \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + decimals + \"}))))\\\\s*$\"\r\n            var regExpString = \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" + decimals + \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + decimals + \"}))))\\\\s*$\"\r\n           \r\n            return String(value).match(new RegExp(regExpString));\r\n        }\r\n    }\r\n\r\n    private specialKeys = [\r\n        'Backspace', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight', 'Delete'\r\n    ];\r\n\r\n    constructor(private el: ElementRef) { }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        if (this.specialKeys.indexOf(event.key) !== -1) {\r\n            return;\r\n        }\r\n        // Do not use event.keycode this is deprecated.\r\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\r\n        let current: string = this.el.nativeElement.value;\r\n        let next: string = current.concat(event.key);\r\n        if (next && !this.check(next, this.decimals)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n@Directive({\r\n    selector: '[CpfFilter]'\r\n})\r\n\r\nexport class CpfDirective {\r\n\r\n    @Input('decimals') decimals: number = 0;\r\n\r\n    private check(value: string, decimals: number)\r\n    {\r\n      if (decimals <= 0) {\r\n        return String(value).match(new RegExp(/^[0-9.-]+$/));\r\n      } else {\r\n        //   var regExpString = \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" + decimals + \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + decimals + \"}))))\\\\s*$\"\r\n          var regExpString = \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" + decimals + \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + decimals + \"}))))\\\\s*$\"\r\n          return String(value).match(new RegExp(regExpString));\r\n      }\r\n    }\r\n\r\n    private specialKeys = [ \r\n        'Backspace', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight', 'Delete'\r\n      ];\r\n\r\n    constructor(private el: ElementRef) { }\r\n\r\n    @HostListener('keydown', [ '$event' ])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        if (this.specialKeys.indexOf(event.key) !== -1) {\r\n            return;\r\n        }\r\n        // Do not use event.keycode this is deprecated.\r\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\r\n        let current: string =this.el.nativeElement.value;\r\n        let next: string = current.concat(event.key);\r\n        if ( next && !this.check(next, this.decimals) ) {\r\n           event.preventDefault();\r\n        }\r\n    }    \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class AppSettings {\r\n    defaultUrl: string =\r\n          \"http://localhost:5001/api\"\r\n  }\r\n  ","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppSettings } from './appsettings';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class SimuladorService{\r\n    simulador\r\n    appsettings : AppSettings = new AppSettings();\r\n    constructor(private http : HttpClient){}\r\n\r\n\r\n    GetSimulador(){\r\n        return this.http.get(this.appsettings.defaultUrl+\"Simulador/BuscarSimulador\").toPromise().then(res=>{\r\n            this.simulador = res;\r\n        })\r\n    }\r\n\r\n    GetTabela(id){\r\n       return this.http.get(this.appsettings.defaultUrl+\"Simulador/BuscarTabela/\"+id);\r\n    }\r\n\r\n    GetCampoUsuario(id){\r\n        return this.http.get(this.appsettings.defaultUrl+\"Simulador/BuscarCampoUsuario/\"+id);\r\n    }\r\n    SetCampoUsuario(campoUsuario){\r\n        return this.http.post(this.appsettings.defaultUrl+\"Simulador/GravarCampoUsuario\",campoUsuario);\r\n    }\r\n\r\n    GetResultadoEtapa1(){\r\n        return this.http.get(this.appsettings.defaultUrl+\"Resultados/BuscarResultado\");\r\n    }\r\n\r\n    SendEmail(data){\r\n        var formData = new FormData();\r\n        formData.append(\"files\", data, data.name);    \r\n        return this.http.post(this.appsettings.defaultUrl+\"Resultados/EnviarResultadoEtapa1\",formData);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Usuario } from './interfaces/usuario.interface';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { AppSettings } from './appsettings';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioService {\r\n  // private appsettings.defaultUrl = \"assets/data/\";\r\n\r\n  usuario:Usuario;\r\n  appsettings : AppSettings = new AppSettings();\r\n  formModel = this.fb.group({\r\n    FullName: ['', Validators.required],\r\n    Cnpj: ['', Validators.required],\r\n    Email: ['', Validators.email],\r\n    Telefone: ['', Validators.required],\r\n    TipoTelefone: [''],\r\n    RazaoSocial: ['', Validators.required],\r\n    TipoEmpresa: ['', Validators.required],\r\n    Produto: ['', Validators.required],\r\n    Faturamento: ['', Validators.required],\r\n    Passwords: this.fb.group({\r\n      Senha: ['', [Validators.required, Validators.minLength(4)]],\r\n      ConfirmSenha: ['', Validators.required]\r\n    }, { validator: this.comparePasswords }),\r\n  })\r\n\r\n  constructor(private http: HttpClient, private fb: FormBuilder) {\r\n\r\n  }\r\n\r\n  comparePasswords(fb: FormGroup) {\r\n    let confirmPaswrdCtrl = fb.get(\"ConfirmSenha\");\r\n    //passwordMismatch\r\n    //confirmPswrdCtrl.error={passwordMismatch:true}\r\n    if (confirmPaswrdCtrl.errors == null || 'passwordMismatch' in confirmPaswrdCtrl.errors) {\r\n      if (fb.get('Senha').value != confirmPaswrdCtrl.value) {\r\n        confirmPaswrdCtrl.setErrors({ 'passwordMismatch': true });\r\n      }\r\n      else {\r\n        confirmPaswrdCtrl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  //   GetManifest(id): Observable<IManifest> {\r\n  //     return this.http.get<IManifest>(this.appsettings.defaultUrl + id + \"/manifest.json\");\r\n  //   }\r\n\r\n  CadastrarUsuario(): Observable<Usuario> {\r\n    var body = {\r\n      FullName: this.formModel.value.FullName,\r\n      Cnpj: this.formModel.value.Cnpj,\r\n      Senha: this.formModel.value.Passwords.Senha,\r\n      Email: this.formModel.value.Email,\r\n      Telefone: this.formModel.value.Telefone,\r\n      TipoTelefone: this.formModel.value.TipoTelefone,\r\n      TipoEmpresa : this.formModel.value.TipoEmpresa,\r\n      RazaoSocial: this.formModel.value.RazaoSocial,\r\n      Produto: this.formModel.value.Produto,\r\n      Faturamento : this.formModel.value.Faturamento.replace(\",\",\".\")\r\n    }\r\n    console.log(body)\r\n    return this.http.post<Usuario>(this.appsettings.defaultUrl + \"/Usuario/Cadastro\", body);\r\n  }\r\n\r\n  Login(data) {\r\n    return this.http.post(this.appsettings.defaultUrl + \"/Usuario/Login\", data);\r\n  }\r\n\r\n  GetUserProfile() {\r\n\r\n    return this.http.get(this.appsettings.defaultUrl + \"/Usuario/BuscarUsuario\")\r\n  }\r\n\r\n  GetAllUsuario() {\r\n    return this.http.get(this.appsettings.defaultUrl + \"/Usuario/BuscarUsuarios\")\r\n  }\r\n\r\n  SendPasswordReset(data){\r\n    return this.http.post(this.appsettings.defaultUrl+\"/Usuario/ResetPassword\",data);\r\n  }\r\n  \r\n\r\n  \r\n  SendPasswordChanged(data){\r\n    var response = {\r\n      Password : data.Passwords.Password,\r\n      Token : data.Token\r\n    }\r\n    return this.http.post(this.appsettings.defaultUrl+\"/Usuario/MudarPassword\",response);\r\n  }\r\n\r\n\r\n  ErrorHandler(error: HttpErrorResponse) {\r\n    return Observable.throw(error.message || \"Server Errror\");\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}